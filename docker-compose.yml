# https://gompro.postype.com/post/1735800
# https://gloriajun.github.io/devops/2017/12/20/docker-mongodb.html
# https://docs.docker.com/compose/compose-file/#volumes
version: '3.2'

services:
  nginx:
    container_name: Nginx
    restart: always
    build: 
      context: ./docker/Nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - /workspace:/mnt/workspace
      - /workspace/nodejs/myapp/docker/Nginx/nginx.conf:/etc/nginx/nginx.conf
      - /workspace/nodejs/myapp/docker/Nginx/conf.d:/etc/nginx/conf.d
    networks:
      - backend

  redis:
    container_name: Redis
    restart: always
    build: 
      context: ./docker/Redis
      dockerfile: Dockerfile
    ports:
      - 6379:6379
    volumes:
      - /workspace:/mnt/workspace
      - /workspace/volumes/redis:/data/redis
      # - redisdata:/data/redis
    networks:
      - backend

  mongo:
    container_name: Mongo
    restart: always
    build: 
      context: ./docker/MongoDB
      dockerfile: Dockerfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      # auth: 
      # bind_ip: 0.0.0.0
    ports:
      - 27017:27017
    volumes:
      - /workspace:/mnt/workspace
      # - /workspace/volumes/mongo:/data/db
      - mongodbdata:/data/db
    networks:
      - backend

  # https://docs.docker.com/samples/library/mongo-express
  mongo-express:
    container_name: Mongo-Express
    restart: always
    build: 
      context: ./docker/Mongo-Express
      dockerfile: Dockerfile
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    ports:
      - 8081:8081
    volumes:
      - /workspace:/mnt/workspace
    links:
      - mongo
    depends_on:
      - mongo
    networks:
      - backend

  application:
    container_name: Application
    restart: always
    build:
      context: ./docker/Application/Node.JS # node:10.8.0
      # context: ./docker/Application/CentOS # centos:7.5.1804 + node:10.8.0
      dockerfile: Dockerfile
    ports:
      - 3000:3000
      - 3443:3443
    volumes:
      - /workspace:/mnt/workspace
    networks:
      - backend
    links:
      - mongo
      - nginx
      - redis
    depends_on:
      - mongo
      - nginx
      - redis

networks:
  backend:
    driver: bridge

volumes:
  mongodbdata:
  redisdata: